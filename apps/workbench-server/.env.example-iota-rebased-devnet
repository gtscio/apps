#----------------------------- Workbench Config -----------------------------#

# Web Server

WORKBENCH_PORT=3000
WORKBENCH_HOST="0.0.0.0"
# WORKBENCH_CORS_ORIGINS=*
# WORKBENCH_HTTP_METHODS=
# WORKBENCH_HTTP_ALLOWED_HEADERS=
# WORKBENCH_HTTP_EXPOSED_HEADERS=

# Global

## Set DEBUG to true to enable additional information in the logs
WORKBENCH_DEBUG=true

# Default User

# Username for Workbench Admin login, defaults to admin@node
# WORKBENCH_ADMIN_USERNAME=""

# Storage

## Storage for files will use this folder as its root, in docker you should map this to a mounted volume to be persistent
WORKBENCH_STORAGE_FILE_ROOT="../../.local-data/workbench-iota-rebased/"

## The file name of the state file, if this file does not exist it will be created with the bootstrap process, defaults to engine-state.json
# WORKBENCH_STATE_FILENAME=""

#----------------------------- Connector Config -----------------------------#

# AWS DynamoDB

# WORKBENCH_AWS_DYNAMODB_ACCESS_KEY_ID=""
# WORKBENCH_AWS_DYNAMODB_SECRET_ACCESS_KEY=""
# WORKBENCH_AWS_DYNAMODB_REGION=""
# WORKBENCH_AWS_DYNAMODB_ENDPOINT=""

# Azure CosmosDB

# WORKBENCH_AZURE_COSMOSDB_ENDPOINT=""
# WORKBENCH_AZURE_COSMOSDB_KEY=""
# WORKBENCH_AZURE_COSMOSDB_DATABASE_ID=""
# WORKBENCH_AZURE_COSMOSDB_CONTAINER_ID=""

# GCP Firestore

# WORKBENCH_GCP_FIRESTORE_PROJECT_ID=""
# WORKBENCH_GCP_FIRESTORE_CREDENTIALS=""
# WORKBENCH_GCP_FIRESTORE_DATABASE_ID=""
# WORKBENCH_GCP_FIRESTORE_COLLECTION_NAME=""
# WORKBENCH_GCP_FIRESTORE_ENDPOINT=""

# ScyllaDb

# WORKBENCH_SCYLLADB_HOSTS=""
# WORKBENCH_SCYLLADB_LOCAL_DATA_CENTER=""
# WORKBENCH_SCYLLADB_KEYSPACE=""

# IPFS Connector

# WORKBENCH_IPFS_API_URL=""
# WORKBENCH_IPFS_BEARER_TOKEN=""

# AWS S3 Connector

# WORKBENCH_AWS_S3_ACCESS_KEY_ID=""
# WORKBENCH_AWS_S3_SECRET_ACCESS_KEY=""
# WORKBENCH_AWS_S3_REGION=""
# WORKBENCH_AWS_S3_BUCKET_NAME=""
# WORKBENCH_AWS_S3_ENDPOINT=""

# Azure Storage Connector

# WORKBENCH_AZURE_STORAGE_ACCOUNT_NAME=""
# WORKBENCH_AZURE_STORAGE_ACCOUNT_KEY=""
# WORKBENCH_AZURE_STORAGE_CONTAINER_NAME=""
# WORKBENCH_AZURE_STORAGE_ENDPOINT=""

# GCP Storage Connector

# WORKBENCH_GCP_STORAGE_PROJECT_ID=""
# WORKBENCH_GCP_STORAGE_CREDENTIALS=""
# WORKBENCH_GCP_STORAGE_BUCKET_NAME=""
# WORKBENCH_GCP_STORAGE_ENDPOINT=""

# IOTA DLT

# WORKBENCH_IOTA_NODE_ENDPOINT=""
# WORKBENCH_IOTA_FAUCET_ENDPOINT=""
# WORKBENCH_IOTA_EXPLORER_ENDPOINT=""
# WORKBENCH_IOTA_COIN_TYPE=""
# WORKBENCH_IOTA_BECH32_HRP=""

# IOTA Rebased DLT

WORKBENCH_IOTA_REBASED_NODE_ENDPOINT="https://api.devnet.iota.cafe"
WORKBENCH_IOTA_REBASED_FAUCET_ENDPOINT="https://faucet.devnet.iota.cafe"
WORKBENCH_IOTA_REBASED_EXPLORER_ENDPOINT="https://explorer.rebased.iota.org/"
WORKBENCH_IOTA_REBASED_NETWORK="devnet"
WORKBENCH_IOTA_REBASED_COIN_TYPE="4218"

# Hashicorp Vault Connector

# WORKBENCH_HASHICORP_VAULT_ENDPOINT=""
# WORKBENCH_HASHICORP_VAULT_TOKEN=""

#----------------------------- Connector Types -----------------------------#

# Entity Storage

## Entity Storage can be overridden by each component [file, memory, aws-dynamodb, azure-cosmosdb, gcp-firestoredb, scylladb]
WORKBENCH_ENTITY_STORAGE_CONNECTOR_TYPE="file"
## Prefix to add to tables in entity storage to separate the data from instances e.g. workbench-
# WORKBENCH_ENTITY_STORAGE_TABLE_PREFIX=""

# Entity File Connector

# WORKBENCH_ENTITY_FILE_ENABLE="false"

# Entity Memory Connector

# WORKBENCH_ENTITY_MEMORY_ENABLE="false"

# Blob Storage

## Blob Storage can be overridden by each component [memory, file, ipfs, aws-s3, azure-storage, gcp-storage]
WORKBENCH_BLOB_STORAGE_CONNECTOR_TYPE="file"

## Prefix to add to folders in blob storage
# WORKBENCH_BLOB_STORAGE_PREFIX=""

## Enable encryption for blob storage, this will encrypt the data before storing it
WORKBENCH_BLOB_STORAGE_ENABLE_ENCRYPTION=true

## The key to use in the vault for encryption, defaults to blob-encryption
# WORKBENCH_BLOB_STORAGE_ENCRYPTION_KEY=""

# Blob File Connector

# WORKBENCH_BLOB_FILE_ENABLE="false"

# Blob Memory Connector

# WORKBENCH_BLOB_MEMORY_ENABLE="false"

# Logging Connector

## Logging Connector [console,entity-storage]
## You can log to more than one connector my separating them with a comma
WORKBENCH_LOGGING_CONNECTOR="console,entity-storage"

# Vault Connector

## Vault Connector [entity-storage, hashicorp]
WORKBENCH_VAULT_CONNECTOR="entity-storage"

# Background Task Connector

## Background Task Connector [entity-storage]
WORKBENCH_BACKGROUND_TASK_CONNECTOR="entity-storage"

# Event Bus Connector

## Event Bus Connector [local]
WORKBENCH_EVENT_BUS_CONNECTOR="local"

# Telemetry Connector

## Telemetry Connector [entity-storage]
WORKBENCH_TELEMETRY_CONNECTOR="entity-storage"

# Faucet Connector

## Faucet Connector Connector [entity-storage, iota, iota-rebased]
WORKBENCH_FAUCET_CONNECTOR="iota-rebased"

# Wallet Connector

## Wallet Connector Connector [entity-storage, iota, iota-rebased]
WORKBENCH_WALLET_CONNECTOR="iota-rebased"

# Immutable Storage Connector

## Immutable Storage Connector [entity-storage, iota, iota-rebased]
WORKBENCH_IMMUTABLE_STORAGE_CONNECTOR="iota-rebased"

# NFT Connector

## NFT Connector [entity-storage, iota, iota-rebased]
WORKBENCH_NFT_CONNECTOR="iota-rebased"

# Identity Resolver Connector

## Identity Resolver Connector [entity-storage, iota, iota-rebased]
WORKBENCH_IDENTITY_RESOLVER_CONNECTOR="iota-rebased"

# Identity Connector

## Identity Connector [entity-storage, iota, iota-rebased]
WORKBENCH_IDENTITY_CONNECTOR="iota-rebased"

# Identity Profile Connector

## Identity Profile Connector [entity-storage]
WORKBENCH_IDENTITY_PROFILE_CONNECTOR="entity-storage"

# Immutable Proof

## The key to use for hashing during the immutable proof operations, defaults to immutable-proof-hash
# WORKBENCH_IMMUTABLE_PROOF_HASH_KEY_ID=""

## The assertion method from the identity to use in immutable proof operations, defaults to immutable-proof-assertion
# WORKBENCH_IMMUTABLE_PROOF_ASSERTION_METHOD_ID=""

# Attestation

## Attestation Connector Connector [nft]
WORKBENCH_ATTESTATION_CONNECTOR="nft"

## The attestation assertion method to use from the DID, defaults to attestation-assertion
# WORKBENCH_ATTESTATION_ASSERTION_METHOD_ID=""

# Auth Processor####

## Auth Type [entity-storage]
WORKBENCH_AUTH_PROCESSOR_TYPE="entity-storage"

## The key to use for signing in auth operations, defaults to auth-signing
# WORKBENCH_AUTH_SIGNING_KEY_ID=""

# Messaging####

## Messaging Email Connector Connector [entity-storage, aws]
WORKBENCH_MESSAGING_EMAIL_CONNECTOR="entity-storage"

## Messaging SMS Connector Connector [entity-storage, aws]
WORKBENCH_MESSAGING_SMS_CONNECTOR="entity-storage"

## Messaging Push Notifications Connector Connector [entity-storage, aws]
WORKBENCH_MESSAGING_PUSH_NOTIFICATIONS_CONNECTOR="entity-storage"

## The AWS Application for push notifications JSON string version of IAwsApplicationSettings array
# WORKBENCH_AWS_MESSAGING_PUSH_NOTIFICATION_APPLICATIONS="[]"