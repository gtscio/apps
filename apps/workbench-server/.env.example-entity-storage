########### Web Server Options ###########

WORKBENCH_PORT=3000
WORKBENCH_HOST="0.0.0.0"
WORKBENCH_CORS_ORIGINS=*
WORKBENCH_HTTP_METHODS=
WORKBENCH_HTTP_ALLOWED_HEADERS=
WORKBENCH_HTTP_EXPOSED_HEADERS=

########### Global Options ###########

## Set DEBUG to true to enable additional information in the logs
WORKBENCH_DEBUG=true

########### Default User ###########

# Username for Workbench Admin login, defaults to admin@node
# WORKBENCH_ADMIN_USERNAME=""

########### Storage Options ###########

## Storage for files will use this folder as its root, in docker you should map this to a mounted volume to be persistent
WORKBENCH_STORAGE_FILE_ROOT="../../.local-data/workbench-entity-storage/"

## The file name of the state file, if this file does not exist it will be created with the bootstrap process, defaults to workbench-state.json
## WORKBENCH_STATE_FILENAME=""

## Default Storage Options can be overriden by each component [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
WORKBENCH_DEFAULT_STORAGE_TYPE="file"

########### Auth Options ###############

## Auth Type Options [entity-storage, none]
WORKBENCH_AUTH_PROCESSOR_TYPE="entity-storage"

## Auth User Storage Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_AUTH_USER_ENTITY_STORAGE_TYPE="file"

## The key to use for signing in auth operations, defaults to auth-signing
# WORKBENCH_AUTH_SIGNING_KEY=""

########### IOTA Options ###########

# WORKBENCH_IOTA_NODE_URL=""
# WORKBENCH_IOTA_FAUCET_URL=""
# WORKBENCH_IOTA_EXPLORER_URL=""
# WORKBENCH_IOTA_COIN_TYPE=""
# WORKBENCH_IOTA_BECH32_HRP=""

########### IPFS Options ###########

# WORKBENCH_IPFS_URL=""
# WORKBENCH_IPFS_TOKEN=""

########### AWS DynamoDB Options ###########

# WORKBENCH_DYNAMODB_ACCESS_KEY_ID=""
# WORKBENCH_DYNAMODB_SECRET_ACCESS_KEY=""
# WORKBENCH_DYNAMODB_REGION=""
# WORKBENCH_DYNAMODB_TABLE_PREFIX=""
# WORKBENCH_DYNAMODB_ENDPOINT=""

########### AWS S3 Options ###########

# WORKBENCH_S3_ACCESS_KEY_ID=""
# WORKBENCH_S3_SECRET_ACCESS_KEY=""
# WORKBENCH_S3_REGION=""
# WORKBENCH_S3_BUCKET=""
# WORKBENCH_S3_BUCKET_PREFIX=""
# WORKBENCH_S3_ENDPOINT=""

########### Azure Storage Options ###########

# WORKBENCH_AZURE_ACCOUNT_NAME=""
# WORKBENCH_AZURE_ACCOUNT_KEY=""
# WORKBENCH_AZURE_CONTAINER=""
# WORKBENCH_AZURE_CONTAINER_PREFIX=""
# WORKBENCH_AZURE_ENDPOINT=""

########### GCP Storage Options ###########

# WORKBENCH_GCP_PROJECT_ID=""
# WORKBENCH_GCP_CREDENTIALS=""
# WORKBENCH_GCP_BUCKET=""
# WORKBENCH_GCP_BUCKET_PREFIX=""
# WORKBENCH_GCP_ENDPOINT=""

########### ScyllaDb Options ###########

# WORKBENCH_SCYLLADB_HOSTS=""
# WORKBENCH_SCYLLADB_LOCAL_DATA_CENTER=""
# WORKBENCH_SCYLLADB_KEYSPACE=""
# WORKBENCH_SCYLLADB_TABLE_PREFIX=""

########### Hashicorp Vault Options ###########

# WORKBENCH_HASHICORP_VAULT_URL=""
# WORKBENCH_HASHICORP_VAULT_TOKEN=""

########### Logging Options ###########

## Logging Connector Options [console,entity-storage]
## You can log to more than one connector my separating them with a comma
WORKBENCH_LOGGING_CONNECTOR="console,entity-storage"

## Logging Storage Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_LOGGING_ENTITY_STORAGE_TYPE="file"

########### Telemetry Options ###########

## Telemetry Connector Options [entity-storage]
WORKBENCH_TELEMETRY_CONNECTOR="entity-storage"

## Telemetry Storage Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_TELEMETRY_ENTITY_STORAGE_TYPE="file"

########### Faucet Options ###########

## Faucet Connector Options [entity-storage, iota]
WORKBENCH_FAUCET_CONNECTOR="entity-storage"

########### Wallet Options ###########

## Wallet Connector Options [entity-storage, iota]
WORKBENCH_WALLET_CONNECTOR="entity-storage"

## Wallet Storage Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_WALLET_ENTITY_STORAGE_TYPE="file"

########### Identity Options ###########

## Identity Connector Options [entity-storage, iota]
WORKBENCH_IDENTITY_CONNECTOR="entity-storage"

## Identity Storage Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_IDENTITY_ENTITY_STORAGE_TYPE="file"

## Identity Profile Connector Options [entity-storage]
WORKBENCH_IDENTITY_PROFILE_CONNECTOR="entity-storage"

## Identity Profile Storage Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_IDENTITY_PROFILE_ENTITY_STORAGE_TYPE="file"

########### Background Task Options ###########

## Background Task Connector Options [entity-storage]
WORKBENCH_BACKGROUND_TASK_CONNECTOR="entity-storage"

## Background Task Entity Storage Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_BACKGROUND_TASK_ENTITY_STORAGE_TYPE="file"

########### Vault Options ###########

## Vault Connector Options [entity-storage, hashicorp]
WORKBENCH_VAULT_CONNECTOR="entity-storage"

## Vault Entity Storage Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_VAULT_KEY_ENTITY_STORAGE_TYPE="file"
# WORKBENCH_VAULT_SECRET_ENTITY_STORAGE_TYPE="file"

########### Blob Storage Options ###########

## Blob Storage Connector Options [file, memory, ipfs, aws, azure, gcp]
WORKBENCH_BLOB_STORAGE_CONNECTOR="file"

## Blob Metadata Entity Storage Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_BLOB_STORAGE_METADATA_ENTITY_STORAGE_TYPE="file"

## Enable encryption for blob storage, this will encrypt the data before storing it
WORKBENCH_BLOB_STORAGE_ENABLE_ENCRYPTION=true

## The name of the key to use for blob encryption, defaults to blob-encryption
# WORKBENCH_BLOB_STORAGE_ENCRYPTION_KEY=""

########### Immutable Storage Options ###########

## Immutable Storage Connector Options [entity-storage, iota]
WORKBENCH_IMMUTABLE_STORAGE_CONNECTOR="entity-storage"

## Immutable Storage Entity Storage Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_IMMUTABLE_STORAGE_ENTITY_STORAGE_TYPE="file"

########### NFT Options ###########

## NFT Connector Options [entity-storage, iota]
WORKBENCH_NFT_CONNECTOR="entity-storage"

## NFT Storage Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_NFT_ENTITY_STORAGE_TYPE="file"

########### Immutable Proof Options ###########

## Immutable Proof Storage Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_IMMUTABLE_PROOF_ENTITY_STORAGE_TYPE="file"

## The key to use for hashing during the immutable proof operations, defaults to immutable-proof-hash
# WORKBENCH_IMMUTABLE_PROOF_HASH_KEY=""

## The assertion method from the identity to use in immutable proof operations, defaults to immutable-proof-assertion
# WORKBENCH_IMMUTABLE_PROOF_ASSERTION_METHOD_ID=""

########### Attestation Options ###########

## Attestation Connector Options [entity-storage, iota]
WORKBENCH_ATTESTATION_CONNECTOR="entity-storage"

## Attestation Storage Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_ATTESTATION_ENTITY_STORAGE_TYPE="file"

## The attestation assertion method to use from the DID, defaults to attestation-assertion
# WORKBENCH_ATTESTATION_ASSERTION_METHOD_ID=""

########### Auditable Item Graph Options ###########

## AIG Vertex Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_AIG_VERTEX_ENTITY_STORAGE_TYPE="file"

## AIG Changeset Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_AIG_CHANGESET_ENTITY_STORAGE_TYPE="file"

########### Auditable Item Stream Options ###########

## AIS Stream Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_AIS_STREAM_ENTITY_STORAGE_TYPE="file"

## AIS Entry Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_AIS_ENTRY_ENTITY_STORAGE_TYPE="file"

########### App Entity Storage Options ###########

## Attestation Info Entity Storage Options [file, memory, scylladb, aws-dynamodb, azure-cosmosdb, gcp-firestoredb]
# WORKBENCH_APP_ATTESTATION_INFO_ENTITY_STORAGE_TYPE="file"

